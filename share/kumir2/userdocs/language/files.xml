<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
        "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd"
        [
                <!ENTITY % times SYSTEM "http://www.w3.org/TR/xhtml1/DTD/xhtml-lat1.ent">
                <!ENTITY % hellip SYSTEM "http://www.w3.org/TR/xhtml1/DTD/xhtml-symbol.ent">
                ]>
<section id="files">
    <title>Алгоритмы работы с файлами</title>
    <section>
        <title>открыть на чтение</title>
        <funcsynopsis role="кумир">
            <funcsynopsisinfo configuration="classic">
                <package>Файлы</package>
            </funcsynopsisinfo>
            <funcprototype>
                <funcdef>алг файл <function>открыть на чтение</function></funcdef>
                <paramdef>лит <parameter>имя файла</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
        <para>Открывает текстовый файл с именем <parameter>имя файла</parameter> для чтения.</para>
        <para>Имя файла может быть как абсолютным, так и относительным, -- в этом случае поиск файла
            осуществяется относительно рабочего каталога.
        </para>
        <para>Если файл не существует, или отсутствуют права на чтение файла, то возникает ошибка выполнения.
        </para>
        <para>Если файл ранее уже был открыт, то возникает ошибка выполнения.</para>
    </section>
    <section>
        <title>открыть на запись</title>
        <funcsynopsis role="кумир">
            <funcsynopsisinfo configuration="classic">
                <package>Файлы</package>
            </funcsynopsisinfo>
            <funcprototype>
                <funcdef>алг файл <function>открыть на запись</function></funcdef>
                <paramdef>лит <parameter>имя файла</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
        <para>Открывает текстовый файл с именем <parameter>имя файла</parameter> для записи.</para>
        <para>Имя файла может быть как абсолютным, так и относительным, -- в этом случае поиск файла
            осуществяется относительно рабочего каталога.
        </para>
        <para>Если файл не существует, то он будет создан, иначе -- содержимое существующего файла будет очищено.</para>
        <para>Если отсутствуют права на создание нового файла или перезапись существующего файла, то возникает ошибка выполнения.
        </para>
        <para>Если файл ранее уже был открыт, то возникает ошибка выполнения.</para>
    </section>
    <section>
        <title>открыть на добавление</title>
        <funcsynopsis role="кумир">
            <funcsynopsisinfo configuration="classic">
                <package>Файлы</package>
            </funcsynopsisinfo>
            <funcprototype>
                <funcdef>алг файл <function>открыть на добавление</function></funcdef>
                <paramdef>лит <parameter>имя файла</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
        <para>Открывает текстовый файл с именем <parameter>имя файла</parameter> для записи.</para>
        <para>Имя файла может быть как абсолютным, так и относительным, -- в этом случае поиск файла
            осуществяется относительно рабочего каталога.
        </para>
        <para>Если файл не существует, то он будет создан, иначе -- содержимое существующего файла останется неизменным,
            а новые данные будут дописаны в конец.</para>
        <para>Если отсутствуют права на создание нового файла или перезапись существующего файла, то возникает ошибка выполнения.
        </para>
        <para>Если файл ранее уже был открыт, то возникает ошибка выполнения.</para>
    </section>
    <section>
        <title>закрыть</title>
        <funcsynopsis role="кумир">
            <funcsynopsisinfo configuration="classic">
                <package>Файлы</package>
            </funcsynopsisinfo>
            <funcprototype>
                <funcdef>алг <function>закрыть</function></funcdef>
                <paramdef>файл <parameter>имя файла</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
        <para>Закрывает ранее открытый для чтения или записи текстовый файл <parameter>имя файла</parameter>.</para>
        <para>После закрытия файл становится доступным для повторного открытия.</para>
        <para>Все файлы должны быть закрыты до окончания работы программы, иначе возникнет ошибка выполнения при
            завершении выполнения программы.
        </para>
    </section>
    <section>
        <title>начать чтение</title>
        <funcsynopsis role="кумир">
            <funcsynopsisinfo configuration="classic">
                <package>Файлы</package>
            </funcsynopsisinfo>
            <funcprototype>
                <funcdef>алг <function>начать чтение</function></funcdef>
                <paramdef>файл <parameter>имя файла</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
        <para>Сбрасывает указатель чтения файла <parameter>имя файла</parameter> на его начало.</para>
    </section>
    <section>
        <title>конец файла</title>
        <funcsynopsis role="кумир">
            <funcsynopsisinfo configuration="classic">
                <package>Файлы</package>
            </funcsynopsisinfo>
            <funcprototype>
                <funcdef>алг лог<function>конец файла</function></funcdef>
                <paramdef>файл <parameter>имя файла</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
        <para>Возвращает <code role="кумир">да</code>, если указатель находится в самом конце файла и
        чтение из него невозможно.
        </para>
    </section>
    <section>
        <title>есть данные</title>
        <funcsynopsis role="кумир">
            <funcsynopsisinfo configuration="classic">
                <package>Файлы</package>
            </funcsynopsisinfo>
            <funcprototype>
                <funcdef>алг лог <function>есть данные</function></funcdef>
                <paramdef>файл <parameter>имя файла</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
        <para>Возвращает <code role="кумир">да</code>, если после текущей позиции чтения в файле
            <parameter>имя файла</parameter> есть хотя бы один видимый символ.
        </para>
        <para>
            Если алгоритм <function>есть данные</function> возвращает значение
            <code role="кумир">нет</code>, а указатель не находится в конце файла (то есть
            алгоритм <function>конец файла</function> также возвращает
            <code role="кумир">нет</code>), то из файла возможно чтение только символа или строки.
        </para>
    </section>
    <section>
        <title>установить кодировку</title>
        <funcsynopsis role="кумир">
            <funcsynopsisinfo configuration="classic">
                <package>Файлы</package>
            </funcsynopsisinfo>
            <funcprototype>
                <funcdef>алг <function>установить кодировку</function></funcdef>
                <paramdef>лит <parameter>имя кодировки</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
        <para>Устанавливает кодировку текстовых файлов, которые будут открыты на чтение или запись
            после вызова данного алгоритма.
        </para>
        <para>Допустимые имена кодировок:
            <itemizedlist>
                <listitem>
                    <para><code>"CP-1251"</code> или <code>"Windows-1251"</code> или <code>"Windows"</code>-- однобайтная
                        кодировка текста, используемая
                        в системе семейства Windows для кириллических символов;
                    </para>
                </listitem>
                <listitem>
                    <para><code>"CP-866"</code> или <code>"IBM-866"</code> или <code>"DOS"</code>-- однобайтная кодировка
                        текста, используемая в консольных программах системы семейства Windows для
                        кириллических символов;
                    </para>
                </listitem>
                <listitem>
                    <para><code>"KOI8-R"</code> или <code>"KOI8"</code> или <code>"КОИ8"</code> или <code>"КОИ8-Р"</code>--
                        однобайтная кодировка текста КОИ-8, используемая в старых системах семейства UNIX;
                    </para>
                </listitem>
                <listitem>
                    <para><code>"UTF-8"</code> или <code>"UTF"</code> или <code>"Linux"</code>-- кодировка
                        текста с переменным количеством байт на символ, используемая в современных системах
                        семейства UNIX (включая MacOS&nbsp;X и Linux).
                    </para>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            Допускаются имена кодировок в любом регистре и с пропущенным символом <code>'-'</code> (дефис) в имени.
        </para>
        <para>Неверное имя кодировки приводит к ошибке выполнения.</para>
    </section>
    <section>
        <title>можно открыть на чтение</title>
        <funcsynopsis role="кумир">
            <funcsynopsisinfo configuration="classic">
                <package>Файлы</package>
            </funcsynopsisinfo>
            <funcprototype>
                <funcdef>алг лог <function>можно открыть на чтение</function></funcdef>
                <paramdef>лит <parameter>имя файла</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
        <para>Возвращает <code role="кумир">да</code>, если выполняются условия:
            <itemizedlist>
                <listitem>
                    <para>файл с указанным именем существует;</para>
                </listitem>
                <listitem>
                    <para>права доступа к файлу достаточны для его чтения.</para>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            Вызов этого алгоритма не приводит к ошибке выполнения.
        </para>
    </section>
    <section>
        <title>можно открыть на запись</title>
        <funcsynopsis role="кумир">
            <funcsynopsisinfo configuration="classic">
                <package>Файлы</package>
            </funcsynopsisinfo>
            <funcprototype>
                <funcdef>алг лог <function>можно открыть на запись</function></funcdef>
                <paramdef>лит <parameter>имя файла</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
        <para>Возвращает <code role="кумир">да</code>, если выполняются условия:
            <itemizedlist>
                <listitem>
                    <para>файл с указанным именем существует;</para>
                </listitem>
                <listitem>
                    <para>права доступа к файлу достаточны для его записи.</para>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            Вызов этого алгоритма не приводит к ошибке выполнения.
        </para>
    </section>
    <section>
        <title>существует</title>
        <funcsynopsis role="кумир">
            <funcsynopsisinfo configuration="classic">
                <package>Файлы</package>
            </funcsynopsisinfo>
            <funcprototype>
                <funcdef>алг лог <function>существует</function></funcdef>
                <paramdef>лит <parameter>имя</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
        <para>Возвращает <code role="кумир">да</code>, если с заданным именем существует файл или каталог.</para>
    </section>
    <section>
        <title>является каталогом</title>
        <funcsynopsis role="кумир">
            <funcsynopsisinfo configuration="classic">
                <package>Файлы</package>
            </funcsynopsisinfo>
            <funcprototype>
                <funcdef>алг лог <function>является каталогом</function></funcdef>
                <paramdef>лит <parameter>имя</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
        <para>Возвращает <code role="кумир">да</code>, существует каталог с заданным именем.</para>
    </section>
    <section>
        <title>создать каталог</title>
        <funcsynopsis role="кумир">
            <funcsynopsisinfo configuration="classic">
                <package>Файлы</package>
            </funcsynopsisinfo>
            <funcprototype>
                <funcdef>алг лог <function>создать каталог</function></funcdef>
                <paramdef>лит <parameter>имя каталога</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
        <para>Имя каталога может быть как абсолютным, так и относительным, -- в этом случае каталог создается
            относительно рабочего каталога.
        </para>
        <para>Алгоритм возвращает <code role="кумир">да</code>, если каталог был успешно создан.</para>
    </section>
    <section>
        <title>удалить_файл</title>
        <funcsynopsis role="кумир">
            <funcsynopsisinfo configuration="classic">
                <package>Файлы</package>
            </funcsynopsisinfo>
            <funcprototype>
                <funcdef>алг лог <function>удалить_файл</function></funcdef>
                <paramdef>лит <parameter>имя файла</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
        <para>Удаляет файл с заданным именем без возможности восстановления.</para>
        <para>Имя файла может быть как абсолютным, так и относительным, -- в этом случае поиск файла
            осуществляется относительно рабочего каталога.
        </para>
        <para>Алгоритм возвращает <code role="кумир">да</code>, если файл был успешно удален.</para>
        <para><emphasis>Внимание:</emphasis> имя алгоритма содержит символ подчеркивания вместо пробела.</para>
        <para><emphasis>Предупреждение:</emphasis> будьте осторожны в применении этого алгоритма!</para>
    </section>
    <section>
        <title>удалить_каталог</title>
        <funcsynopsis role="кумир">
            <funcsynopsisinfo configuration="classic">
                <package>Файлы</package>
            </funcsynopsisinfo>
            <funcprototype>
                <funcdef>алг лог <function>удалить_каталог</function></funcdef>
                <paramdef>лит <parameter>имя каталога</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
        <para>Удаляет пустой каталог с заданным именем без возможности восстановления.</para>
        <para>Имя каталога может быть как абсолютным, так и относительным, -- в этом случае каталог удаляется
            относительно рабочего каталога.
        </para>
        <para>Алгоритм возвращает <code role="кумир">да</code>, если каталог был успешно удален.</para>
        <para><emphasis>Внимание:</emphasis> имя алгоритма содержит символ подчеркивания вместо пробела.</para>
        <para><emphasis>Предупреждение:</emphasis> будьте осторожны в применении этого алгоритма!</para>
    </section>
    <section>
        <title>полный путь</title>
        <funcsynopsis role="кумир">
            <funcsynopsisinfo configuration="classic">
                <package>Файлы</package>
            </funcsynopsisinfo>
            <funcprototype>
                <funcdef>алг лит <function>полный путь</function></funcdef>
                <paramdef>лит <parameter>имя</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
        <para>
            Возвращает полное (абсолютное) имя файла или каталога без проверки его существования.
        </para>
    </section>
    <section>
        <title>РАБОЧИЙ КАТАЛОГ</title>
        <funcsynopsis role="кумир">
            <funcsynopsisinfo configuration="classic">
                <package>Файлы</package>
            </funcsynopsisinfo>
            <funcprototype>
                <funcdef>алг лит <function>РАБОЧИЙ КАТАЛОГ</function></funcdef>
            </funcprototype>
        </funcsynopsis>
        <para>
            Возвращает полное (абсолютное) имя текущего рабочего каталога.
        </para>
	<orderedlist>
	  <listitem>
	  <para>
            При запуске Кумир-программы из консоли, рабочим каталогом является тот, который был
            выбран в консоли до запуска.
			</para>
	  </listitem>
	  <listitem>
	  <para>
            При запуске Кумир-программы из среды Кумир, рабочий каталог определяется следующим образом:
		</para>
            <itemizedlist>
                <listitem>
				<para>
                    Если программа сохранена в файл, то рабочий каталог -- это каталог, в котором сохранена программа.
				</para>
                </listitem>
                <listitem>
				<para>
                    Если программа не сохранена, то рабочий каталог -- это каталог, установленный соответствующим пунктом
                    меню <guimenu>Программа</guimenu> главного окна.
				</para>
                </listitem>
            </itemizedlist>
	  </listitem>
	</orderedlist>
    </section>
    <section>
        <title>КАТАЛОГ ПРОГРАММЫ</title>
        <funcsynopsis role="кумир">
            <funcsynopsisinfo configuration="classic">
                <package>Файлы</package>
            </funcsynopsisinfo>
            <funcprototype>
                <funcdef>алг лит <function>КАТАЛОГ ПРОГРАММЫ</function></funcdef>
            </funcprototype>
        </funcsynopsis>
        <para>
            Возвращает полное (абсолютное) имя каталога, в котором находится выполняемая Кумир-программа.
        </para>
        <para>
            Если программа не сохранена в файл, то возвращается значение <code>"./"</code>.
        </para>
    </section>
    <section>
        <title>НАЗНАЧИТЬ ВВОД</title>
        <funcsynopsis role="кумир">
            <funcsynopsisinfo configuration="classic">
                <package>Файлы</package>
            </funcsynopsisinfo>
            <funcprototype>
                <funcdef>алг <function>НАЗНАЧИТЬ ВВОД</function></funcdef>
                <paramdef>лит <parameter>имя файла</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
		<itemizedlist>
			<listitem>
				<para>
				Если <parameter>имя файла</parameter> не пустое и файл доступен для чтения, то устанавливает его в качестве источника
				данных, используемых оператором <code role="кумир">ввод</code> без явного указания файловой переменной.
				</para>
			</listitem>
			<listitem>
			<para>
				Если <parameter>имя файла</parameter>-- пустая строка, то восстанавливает исходное поведение (ввод с клавиатуры)
				оператора <code role="кумир">ввод</code>.
				</para>
			</listitem>
			<listitem>
			<para>
				Если указанный файл не существует или не доступен для чтения, то возникает ошибка выполнения.
				</para>
			</listitem>
		</itemizedlist>
    </section>
    <section>
        <title>НАЗНАЧИТЬ ВЫВОД</title>
        <funcsynopsis role="кумир">
            <funcsynopsisinfo configuration="classic">
                <package>Файлы</package>
            </funcsynopsisinfo>
            <funcprototype>
                <funcdef>алг <function>НАЗНАЧИТЬ ВЫВОД</function></funcdef>
                <paramdef>лит <parameter>имя файла</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
		<itemizedlist>
			<listitem>
			<para>
				Если <parameter>имя файла</parameter> не пустое и файл доступен для записи, то устанавливает его в качестве приемника
				текста, используемого оператором <code role="кумир">вывод</code> без явного указания файловой переменной.
				</para>
			</listitem>
			<listitem>
			<para>
				Если <parameter>имя файла</parameter>-- пустая строка, то восстанавливает исходное поведение (вывод на экран)
				оператора <code role="кумир">вывод</code>.
				</para>
			</listitem>
			<listitem>
			<para>
				Если указанный файл не существует или не доступен для записи, то возникает ошибка выполнения.
				</para>
			</listitem>
		</itemizedlist>
    </section>
    <section>
        <title>консоль</title>
        <funcsynopsis role="кумир">
            <funcsynopsisinfo configuration="classic">
                <package>Файлы</package>
            </funcsynopsisinfo>
            <funcprototype>
                <funcdef>алг файл <function>консоль</function></funcdef>
            </funcprototype>
        </funcsynopsis>
        <para>
            Возвращает псевдо-файл, связанный с терминалом, который обладает следующими свойствами:
            <itemizedlist>
                <listitem>
                    <para>файл всегда открыт для чтения и записи;</para>
                </listitem>
                <listitem>
                    <para>закрытие файла не требуется, а попытка закрытия приводит к ошибке выполнения;</para>
                </listitem>
                <listitem>
                    <para>файл не имеет имени;</para>
                </listitem>
                    <para>запись в файл приводит к отображению текста на экран;</para>
                <listitem>
                    <para>чтение из файла приводит к запросу ввода с клавиатуры.</para>
                </listitem>
            </itemizedlist>
        </para>
        <para>Над полученным с помощью алгоритма <function>консоль</function> значением величины типа <code role="кумир">файл</code>
            можно выполнять стандартные операции: присваивание другим величинам и проверку на равенство с другой величиной
            типа <code role="кумир">файл</code>.
        </para>
    </section>
</section>